<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/security/oauth2
           http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">
           
    <!-- /oauth/token 的http 配置, 用于监听该URL的请求, 核心 -->
	<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"  
	          entry-point-ref="oauth2AuthenticationEntryPoint">  
	    <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" method="POST"/>  
	    <anonymous enabled="false"/>  
	    <http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>  
	    <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>  
	    <access-denied-handler ref="oauth2AccessDeniedHandler"/>  
	</http>

	<authentication-manager id="oauth2AuthenticationManager">
	    <authentication-provider user-service-ref="oauth2ClientDetailsUserService"/>
	</authentication-manager>
	<beans:bean id="oauth2ClientDetailsUserService"
	                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
	    <beans:constructor-arg ref="clientDetailsService"/>
	</beans:bean>
	<oauth2:client-details-service id="clientDetailsService">
	       <oauth2:client client-id="client" authorized-grant-types="password,authorization_code,refresh_token,implicit" secret="secret" scope="read,write,trust"/>
	</oauth2:client-details-service>


	<!-- 4个基本的bean：分别处理访问成功、访问拒绝、认证点和访问控制 -->
	<beans:bean id="oauth2AuthenticationEntryPoint"
	                class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>
	    
	<beans:bean id="oauth2AccessDeniedHandler"
	                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
	                
	<beans:bean id="oauthUserApprovalHandler" 
	                class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler"/>
	    
	<beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
	    <beans:constructor-arg>
	        <beans:list>
	            <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
	            <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
	            <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
	        </beans:list>
	    </beans:constructor-arg>
	</beans:bean>

	<oauth2:authorization-server client-details-service-ref="clientDetailsService" 
			token-services-ref="tokenServices" user-approval-handler-ref="oauthUserApprovalHandler" >  
	    <oauth2:authorization-code />
	    <oauth2:implicit />
	    <oauth2:refresh-token />
	    <oauth2:client-credentials />
	    <oauth2:password />
	</oauth2:authorization-server>

	<!-- class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore/InMemoryTokenStore" -->
	<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<beans:constructor-arg ref="dataSource"/>
	</beans:bean>
	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">  
	    <beans:property name="tokenStore" ref="tokenStore"/>  
	    <beans:property name="supportRefreshToken" value="true"/>
	</beans:bean>

	<beans:bean id="clientCredentialsTokenEndpointFilter"
	                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
	    <beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>
	</beans:bean>

	<oauth2:resource-server id="mobileResourceServer" resource-id="mobile-resource" token-services-ref="tokenServices" />
    
    <!-- 系统url权限定义 -->   
	<http pattern="/**" create-session="never"
	        entry-point-ref="oauth2AuthenticationEntryPoint"
	        access-decision-manager-ref="oauth2AccessDecisionManager">
	    <anonymous enabled="false" />
	    <custom-filter ref="mobileResourceServer" before="PRE_AUTH_FILTER" />
	    <access-denied-handler ref="oauth2AccessDeniedHandler" />
	    
	    <!-- 以下定义URL的访问权限 -->
	    <intercept-url pattern="/**" access="ROLE_ADMIN" />
	    
	</http>           
           
    <!-- 自定义认证器 -->
    <authentication-manager>
	  <authentication-provider user-service-ref="myUserDetailService"/>
	</authentication-manager>
           
</beans:beans>